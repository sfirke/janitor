% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adorn_percentages.R
\name{adorn_percentages}
\alias{adorn_percentages}
\title{Convert a data.frame of counts to percentages.}
\usage{
adorn_percentages(dat, denominator = "row", na.rm = TRUE, ...)
}
\arguments{
\item{dat}{A \code{tabyl} or other data.frame with a tabyl-like layout.
If given a list of data.frames, this function will apply itself to each
\code{data.frame} in the list (designed for 3-way \code{tabyl} lists).}

\item{denominator}{The direction to use for calculating percentages.
One of "row", "col", or "all".}

\item{na.rm}{should missing values (including \code{NaN}) be omitted from the calculations?}

\item{...}{columns to adorn. This takes a <\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}>
specification. By default, all numeric columns (besides the initial column, if numeric)
are adorned, but this allows you to manually specify which columns should
be adorned, for use on a \code{data.frame} that does not result from a call to \code{\link[=tabyl]{tabyl()}}.}
}
\value{
A \code{data.frame} of percentages, expressed as numeric values between 0 and 1.
}
\description{
This function defaults to excluding the first column of the input data.frame,
assuming that it contains a descriptive variable, but this can be overridden
by specifying the columns to adorn in the \code{...} argument.
}
\examples{

mtcars \%>\%
  tabyl(am, cyl) \%>\%
  adorn_percentages("col")

# calculates correctly even with totals column and/or row:
mtcars \%>\%
  tabyl(am, cyl) \%>\%
  adorn_totals("row") \%>\%
  adorn_percentages()

# Control the columns to be adorned with the ... variable selection argument
# If using only the ... argument, you can use empty commas as shorthand
# to supply the default values to the preceding arguments:

cases <- data.frame(
  region = c("East", "West"),
  year = 2015,
  recovered = c(125, 87),
  died = c(13, 12)
)

cases \%>\%
  adorn_percentages(, , recovered:died)
}
